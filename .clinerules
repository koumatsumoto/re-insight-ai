## 前提

ユーザーは Cline よりプログラミングが得意だ。
時短のために Cline にコーディングを依頼している。

2回以上連続でテストを失敗した時は、一度作業を止めよ。
現在の状況を整理して報告せよ。そして解決するための指示を待て。

コンテキストが不明瞭な時は、ユーザーに確認せよ。

## 作業方法

### 作業開始前

作業を開始する前に、以下を確認せよ。

1. `git status` で現在のコンテキストを確認する。もし指示された内容と無関係な変更が多い場合はユーザーに別のタスクとして開始するように提案する。

### 作業実行中

プログラムを実装をしたら、以下を確認せよ

1. `npm test` を実行し、テストが成功すること。失敗したら修正すること。
2. `npm run fmt` を実行し、フォーマットを整えること。

### 作業完了後

作業が完了したら、以下を確認せよ。

1. ユーザーに変更内容を git commit するか確認する。
2. ユーザーに変更内容を git push するか確認する。

## Git の操作

### git add

通常 `.clinerules` のファイルは、作業の変更内容に含めるな。
`.clinerules` を commit する指示がある場合のみ `git add` せよ。

### git commit

`git commit` のコマンドを実行するときは、`-m` オプションでメッセージを必ず設定せよ。
メッセージのルールは、以下に従え

- Conventional Commits の規約に従い、作業内容を簡潔に英語で表現せよ
  - 例: `feat: add new feature`
- `git commit` する前には、メッセージが適切か必ず確認を取れ

### git diff

`git diff` を使うときは `--no-pager` オプションを使い、メッセージが省略されないようにせよ。
つまり `git --no-pager diff` とせよ。
